{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshKaushik\\\\OneDrive\\\\Desktop\\\\student\\\\gui\\\\src\\\\pages\\\\RetrieveAllStudents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllStudents } from '../services/api'; // Import the API function\nimport './RetrieveAllStudents.css'; // Ensure this CSS file exists for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RetrieveAllStudents = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const result = await getAllStudents(); // Call the API function\n        console.log('API Response:', result); // Log the response to verify structure\n        // Access the first element of the data array, which contains student objects\n        if (result.data.length > 0) {\n          setStudents(result.data[0]);\n        } else {\n          setStudents([]); // Set to empty array if no data\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching students:', error); // Detailed error logging\n        setError('Error fetching students. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this); // Handle loading state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this); // Display error if any\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"retrieve-all-students\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.fullname || 'N/A', \" - \", student.email || 'N/A', \" - \", student.course_of_study || 'N/A', \" - Year: \", student.year || 'N/A', \" - GPA: \", student.GPA || 'N/A']\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No students found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) // Handle empty list scenario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RetrieveAllStudents, \"oD8w6SY/dv9SFg8R/qkCA5q1bBU=\");\n_c = RetrieveAllStudents;\nexport default RetrieveAllStudents;\nvar _c;\n$RefreshReg$(_c, \"RetrieveAllStudents\");","map":{"version":3,"names":["React","useState","useEffect","getAllStudents","jsxDEV","_jsxDEV","RetrieveAllStudents","_s","students","setStudents","error","setError","loading","setLoading","fetchStudents","result","console","log","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","student","fullname","email","course_of_study","year","GPA","id","_c","$RefreshReg$"],"sources":["C:/Users/HarshKaushik/OneDrive/Desktop/student/gui/src/pages/RetrieveAllStudents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllStudents } from '../services/api'; // Import the API function\r\nimport './RetrieveAllStudents.css'; // Ensure this CSS file exists for styling\r\n\r\nconst RetrieveAllStudents = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const result = await getAllStudents(); // Call the API function\r\n        console.log('API Response:', result); // Log the response to verify structure\r\n        // Access the first element of the data array, which contains student objects\r\n        if (result.data.length > 0) {\r\n          setStudents(result.data[0]); \r\n        } else {\r\n          setStudents([]); // Set to empty array if no data\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error); // Detailed error logging\r\n        setError('Error fetching students. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>; // Handle loading state\r\n  if (error) return <div className=\"error-message\">{error}</div>; // Display error if any\r\n\r\n  return (\r\n    <div className=\"retrieve-all-students\">\r\n      <h2>All Students</h2>\r\n      <ul>\r\n        {students.length > 0 ? (\r\n          students.map((student) => (\r\n            <li key={student.id}>\r\n              {student.fullname || 'N/A'} - {student.email || 'N/A'} - {student.course_of_study || 'N/A'} - Year: {student.year || 'N/A'} - GPA: {student.GPA || 'N/A'}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No students found</li> // Handle empty list scenario\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetrieveAllStudents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}