{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getAllStudents}from'../services/api';// Import the API function\nimport'./RetrieveAllStudents.css';// Ensure this CSS file exists for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RetrieveAllStudents=()=>{const[students,setStudents]=useState([]);const[error,setError]=useState('');const[loading,setLoading]=useState(true);useEffect(()=>{const fetchStudents=async()=>{try{const result=await getAllStudents();// Call the API function\nconsole.log('API Response:',result);// Log the response to verify structure\n// Access the first element of the data array, which contains student objects\nif(result.data.length>0){setStudents(result.data[0]);}else{setStudents([]);// Set to empty array if no data\n}setLoading(false);}catch(error){console.error('Error fetching students:',error);// Detailed error logging\nsetError('Error fetching students. Please try again later.');setLoading(false);}};fetchStudents();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Handle loading state\nif(error)return/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error});// Display error if any\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"retrieve-all-students\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"All Students\"}),/*#__PURE__*/_jsx(\"ul\",{children:students.length>0?students.map(student=>/*#__PURE__*/_jsxs(\"li\",{children:[student.fullname||'N/A',\" - \",student.email||'N/A',\" - \",student.course_of_study||'N/A',\" - Year: \",student.year||'N/A',\" - GPA: \",student.GPA||'N/A']},student.id)):/*#__PURE__*/_jsx(\"li\",{children:\"No students found\"})// Handle empty list scenario\n})]});};export default RetrieveAllStudents;","map":{"version":3,"names":["React","useState","useEffect","getAllStudents","jsx","_jsx","jsxs","_jsxs","RetrieveAllStudents","students","setStudents","error","setError","loading","setLoading","fetchStudents","result","console","log","data","length","children","className","map","student","fullname","email","course_of_study","year","GPA","id"],"sources":["C:/Users/HarshKaushik/OneDrive/Desktop/student/gui/src/pages/RetrieveAllStudents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllStudents } from '../services/api'; // Import the API function\r\nimport './RetrieveAllStudents.css'; // Ensure this CSS file exists for styling\r\n\r\nconst RetrieveAllStudents = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const result = await getAllStudents(); // Call the API function\r\n        console.log('API Response:', result); // Log the response to verify structure\r\n        // Access the first element of the data array, which contains student objects\r\n        if (result.data.length > 0) {\r\n          setStudents(result.data[0]); \r\n        } else {\r\n          setStudents([]); // Set to empty array if no data\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error); // Detailed error logging\r\n        setError('Error fetching students. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>; // Handle loading state\r\n  if (error) return <div className=\"error-message\">{error}</div>; // Display error if any\r\n\r\n  return (\r\n    <div className=\"retrieve-all-students\">\r\n      <h2>All Students</h2>\r\n      <ul>\r\n        {students.length > 0 ? (\r\n          students.map((student) => (\r\n            <li key={student.id}>\r\n              {student.fullname || 'N/A'} - {student.email || 'N/A'} - {student.course_of_study || 'N/A'} - Year: {student.year || 'N/A'} - GPA: {student.GPA || 'N/A'}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No students found</li> // Handle empty list scenario\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetrieveAllStudents;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,cAAc,KAAQ,iBAAiB,CAAE;AAClD,MAAO,2BAA2B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAb,cAAc,CAAC,CAAC,CAAE;AACvCc,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEF,MAAM,CAAC,CAAE;AACtC;AACA,GAAIA,MAAM,CAACG,IAAI,CAACC,MAAM,CAAG,CAAC,CAAE,CAC1BV,WAAW,CAACM,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAC7B,CAAC,IAAM,CACLT,WAAW,CAAC,EAAE,CAAC,CAAE;AACnB,CACAI,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOH,KAAK,CAAE,CACdM,OAAO,CAACN,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAE;AAClDC,QAAQ,CAAC,kDAAkD,CAAC,CAC5DE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,mBAAOR,IAAA,QAAAgB,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAC3C,GAAIV,KAAK,CAAE,mBAAON,IAAA,QAAKiB,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAEV,KAAK,CAAM,CAAC,CAAE;AAEhE,mBACEJ,KAAA,QAAKe,SAAS,CAAC,uBAAuB,CAAAD,QAAA,eACpChB,IAAA,OAAAgB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBhB,IAAA,OAAAgB,QAAA,CACGZ,QAAQ,CAACW,MAAM,CAAG,CAAC,CAClBX,QAAQ,CAACc,GAAG,CAAEC,OAAO,eACnBjB,KAAA,OAAAc,QAAA,EACGG,OAAO,CAACC,QAAQ,EAAI,KAAK,CAAC,KAAG,CAACD,OAAO,CAACE,KAAK,EAAI,KAAK,CAAC,KAAG,CAACF,OAAO,CAACG,eAAe,EAAI,KAAK,CAAC,WAAS,CAACH,OAAO,CAACI,IAAI,EAAI,KAAK,CAAC,UAAQ,CAACJ,OAAO,CAACK,GAAG,EAAI,KAAK,GADjJL,OAAO,CAACM,EAEb,CACL,CAAC,cAEFzB,IAAA,OAAAgB,QAAA,CAAI,mBAAiB,CAAI,CAAE;AAC5B,CACC,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}