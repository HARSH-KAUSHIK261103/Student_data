{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshKaushik\\\\OneDrive\\\\Desktop\\\\student\\\\gui\\\\src\\\\pages\\\\DeleteStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllStudents, deleteStudent } from '../services/api';\nimport './DeleteStudent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteStudent = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [selectedStudentId, setSelectedStudentId] = useState('');\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const result = await getAllStudents();\n        setStudents(result.data[0]); // Adjusted for response structure\n      } catch (error) {\n        console.error('Error fetching students:', error);\n      }\n    };\n    fetchStudents();\n  }, []);\n  const handleDelete = async () => {\n    if (selectedStudentId) {\n      try {\n        await deleteStudent(selectedStudentId);\n        alert('Student deleted successfully!');\n        setStudents(students.filter(student => student.id !== selectedStudentId));\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        alert('Error deleting student.');\n      }\n    } else {\n      alert('Please select a student to delete.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"delete-student\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"student\",\n        children: \"Select Student:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"student\",\n        value: selectedStudentId,\n        onChange: e => setSelectedStudentId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Student--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: student.id,\n          children: student.fullname\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteStudent, \"vgGtrb15rlXweTcFs9OPp0FWkiw=\");\n_c = DeleteStudent;\nexport default DeleteStudent;\nvar _c;\n$RefreshReg$(_c, \"DeleteStudent\");","map":{"version":3,"names":["React","useState","useEffect","getAllStudents","deleteStudent","jsxDEV","_jsxDEV","DeleteStudent","_s","students","setStudents","selectedStudentId","setSelectedStudentId","fetchStudents","result","data","error","console","handleDelete","alert","filter","student","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","map","fullname","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HarshKaushik/OneDrive/Desktop/student/gui/src/pages/DeleteStudent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllStudents, deleteStudent } from '../services/api';\r\nimport './DeleteStudent.css';\r\n\r\nconst DeleteStudent = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudentId, setSelectedStudentId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const result = await getAllStudents();\r\n        setStudents(result.data[0]); // Adjusted for response structure\r\n      } catch (error) {\r\n        console.error('Error fetching students:', error);\r\n      }\r\n    };\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const handleDelete = async () => {\r\n    if (selectedStudentId) {\r\n      try {\r\n        await deleteStudent(selectedStudentId);\r\n        alert('Student deleted successfully!');\r\n        setStudents(students.filter(student => student.id !== selectedStudentId));\r\n      } catch (error) {\r\n        console.error('Error deleting student:', error);\r\n        alert('Error deleting student.');\r\n      }\r\n    } else {\r\n      alert('Please select a student to delete.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-student\">\r\n      <h2>Delete Student</h2>\r\n      <div className=\"select-box\">\r\n        <label htmlFor=\"student\">Select Student:</label>\r\n        <select\r\n          id=\"student\"\r\n          value={selectedStudentId}\r\n          onChange={(e) => setSelectedStudentId(e.target.value)}\r\n        >\r\n          <option value=\"\">--Select a Student--</option>\r\n          {students.map(student => (\r\n            <option key={student.id} value={student.id}>\r\n              {student.fullname}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <button onClick={handleDelete}>Delete Student</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteStudent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}